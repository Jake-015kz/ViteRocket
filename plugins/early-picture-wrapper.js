import fs from "fs-extra";
import { glob } from "glob";
import path from "path";

function wrapImagesInSource() {
  console.log("üñºÔ∏è –†–∞–Ω–Ω–µ–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ HTML...");

  const htmlFiles = glob.sync("src/pages/**/*.html");
  console.log(`üìÑ –ù–∞–π–¥–µ–Ω–æ ${htmlFiles.length} HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);

  let totalWrapped = 0;

  htmlFiles.forEach((file) => {
    console.log(`üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${path.basename(file)}`);
    let html = fs.readFileSync(file, "utf-8");
    let wrappedCount = 0;

    // –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø—É—Ç—è—Ö (–¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Vite)
    const imgRegex =
      /<img\s+[^>]*src="([^"]*img\/content\/[^"]+\.(jpg|jpeg|png))"[^>]*>/gi;

    const newHtml = html.replace(imgRegex, (match, src) => {
      console.log(`üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${src}`);

      const fileName = path.basename(src);
      const baseName = fileName.replace(/\.(jpg|jpeg|png)$/i, "");
      const originalExt = path.extname(src).toLowerCase().replace(".", "");

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
      const altMatch = match.match(/alt="([^"]*)"/);
      const alt = altMatch ? altMatch[1] : "";

      const classMatch = match.match(/class="([^"]*)"/);
      const classes = classMatch ? `class="${classMatch[1]}"` : "";

      const loadingMatch = match.match(/loading="([^"]*)"/);
      const loading = loadingMatch ? loadingMatch[1] : "lazy";

      // –°–æ–∑–¥–∞–µ–º picture —Å –ø—É—Ç—è–º–∏ –∫–æ—Ç–æ—Ä—ã–µ –ë–£–î–£–¢ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
      const picture = `<picture>
        <source type="image/avif" srcset="/img/${baseName}-mobile.avif 600w, /img/${baseName}-tablet.avif 1000w, /img/${baseName}-desktop.avif 1600w" sizes="(max-width: 768px) 100vw, (max-width: 1024px) 80vw, 1200px">
        <source type="image/webp" srcset="/img/${baseName}-mobile.webp 600w, /img/${baseName}-tablet.webp 1000w, /img/${baseName}-desktop.webp 1600w" sizes="(max-width: 768px) 100vw, (max-width: 1024px) 80vw, 1200px">
        <img src="/img/${baseName}-desktop.${originalExt}" alt="${alt}" ${classes} loading="${loading}">
      </picture>`;

      wrappedCount++;
      return picture;
    });

    if (wrappedCount > 0) {
      fs.writeFileSync(file, newHtml, "utf-8");
      console.log(
        `‚úÖ –û–±–µ—Ä–Ω—É—Ç–æ ${wrappedCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ ${path.basename(file)}`
      );
      totalWrapped += wrappedCount;
    }
  });

  console.log(
    `üéâ –í—Å–µ–≥–æ –æ–±–µ—Ä–Ω—É—Ç–æ ${totalWrapped} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö`
  );
}

export const earlyPictureWrapper = {
  name: "early-picture-wrapper",

  // –†–∞–±–æ—Ç–∞–µ–º –î–û –æ–±—Ä–∞–±–æ—Ç–∫–∏ Vite
  buildStart() {
    if (process.env.NODE_ENV === "production") {
      wrapImagesInSource();
    }
  },
};
